<?php

//Создайте массив. Объедините все элементы массива в строку и распечатайте её.
$arr = [78, 60, 62, 68, 71, 68, 73, 85, 66, 64, 76, 63, 75, 76, 73, 68, 62, 73, 72, 65, 74, 62, 62, 65, 64, 68, 73, 75, 79, 73];
$a = implode($arr);
print_r($a);
echo "\n===================================================================\n";

//Используя функцию удаления HTML и PHP-тегов из строки, выведите на экран строку «<h1>Привет, мир!</h1>».
// Примечание: строка не должна выглядеть как заголовок первого уровня – все теги должны быть удалены.

$str = "<h1>Привет, мир!</h1>";
echo strip_tags($str);
echo "\n===================================================================\n";

//Используя stripos(), найдите во фразе «Ехал Грека через реку» ближайшее вхождение «ре». Работа ведется с однобайтной кодировкой.
$a = "pe";
$string = "Ехал Грека через реку";
$pos = stripos($string,'ре');
if ($pos !== false) {
    echo "Нашел 'ре' в позиции $pos";
}
echo "\n===================================================================\n";
//Найдите длину строки «Ехал Грека через реку» в однобайтной кодировке
//Найдите длину строки «Ехал Грека через реку» в многобайтной кодировке. Примечание: вам пригодится mb_strlen().
$str = "Ехал Грека через реку";
$b1 = strlen($str);
$b2 = mb_strlen($str);
echo $b1."\n", $b2;
echo "\n===================================================================\n";

//Используя встроенную функцию PHP по работе со строками, найдите количество вхождений «ре» в «Ехал Грека через реку»
$st = "Ехал Грека через реку";
echo substr_count($st,'ре');
echo "\n===================================================================\n";

//Найдите функцию, которая находит длину гипотенузы прямоугольного треугольника.
echo hypot(3,4);
echo "\n===================================================================\n";
//Используя функцию генерации случайного числа, сгенерируйте целое число в диапазоне от 45 до 234
echo rand(45,234);
echo "\n===================================================================\n";
//Используя функцию генерации случайного числа, сгенерируйте дробное число в диапазоне от 45 до 234
echo rand(450,2340)/10;
echo "\n===================================================================\n";

//Есть массив $arr = array(“first”=>45, “second”=>76, “third”=>12). Используя встроенную в PHP функцию, получить массив, элементами которого являются значениями массива $arr.
$arr = ['first'=>45, 'second'=>76, 'third'=>12];
$as = [];
/*foreach ($arr as $value){
    $as[]=$value;
}*/
print_r(array_values($arr));
echo "\n===================================================================\n";
//Есть массив $arr = array(“first”=>45, “second”=>76, “third”=>12). Используя встроенную в PHP функцию, получить массив, элементами которого являются ключами массива $arr
$arr = ['first'=>45, 'second'=>76, 'third'=>12];
$rew = [];
foreach ($arr as $key=>$value){
    $rew[]=$key;
}print_r($rew);
echo "\n===================================================================\n";
//Используя встроенные функции, удалите первый элемент массива $arr = [45, “тест”, 100]
// и добавьте в конец массива строку “тест2”. Примечание: добавление элемента в конец массива также нужно выполнить функцией.
$arr = [45, 'тест', 100];
unset($arr[0]);
array_push($arr,'тест2');
print_r($arr);
echo "\n===================================================================\n";
//Переверните массив $arr = array(“first”=>45, “second”=>76, “third”=>12) при помощи встроенной в PHP функции по работе с массивами.
$array =['first'=>45, 'second'=>76, 'third'=>12];
print_r(array_reverse($array));
echo "\n===================================================================\n";
//Есть массив $arr = array(45, 76, 12, 12, 45, 12). Сколько элементов будет в массиве, который вернет функция array_unique().
$arr = [45, 76, 12, 12, 45, 12];
echo count(array_unique($arr));

